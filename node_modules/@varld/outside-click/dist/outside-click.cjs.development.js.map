{"version":3,"file":"outside-click.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * Attach outside click listener\n * @param elements The inside elements\n * @param onOutsideClick Called on outside click\n */\nlet outsideClick = (\n  elements: HTMLElement | HTMLElement[],\n  onOutsideClick: (evt: MouseEvent) => any,\n  isEnabled?: () => boolean\n) => {\n  if (typeof window == 'undefined') return () => {};\n\n  let elementsArray = Array.isArray(elements) ? elements : [elements];\n\n  let handler = (evt: MouseEvent) => {\n    if (typeof isEnabled == 'function' && !isEnabled()) return;\n    let targetElement = evt.target as HTMLElement;\n\n    do {\n      if (elementsArray.indexOf(targetElement) != -1) return;\n      targetElement = targetElement.parentNode as HTMLElement;\n    } while (targetElement);\n\n    onOutsideClick(evt);\n  };\n\n  document.addEventListener('click', handler);\n  return () => document.removeEventListener('click', handler);\n};\n\nexport default outsideClick;\n"],"names":["outsideClick","elements","onOutsideClick","isEnabled","window","elementsArray","Array","isArray","handler","evt","targetElement","target","indexOf","parentNode","document","addEventListener","removeEventListener"],"mappings":";;;;AAAA;;;;;AAKA,IAAIA,YAAY,GAAG,SAAfA,YAAe,CACjBC,QADiB,EAEjBC,cAFiB,EAGjBC,SAHiB;AAKjB,MAAI,OAAOC,MAAP,IAAiB,WAArB,EAAkC,OAAO,cAAP;AAElC,MAAIC,aAAa,GAAGC,KAAK,CAACC,OAAN,CAAcN,QAAd,IAA0BA,QAA1B,GAAqC,CAACA,QAAD,CAAzD;;AAEA,MAAIO,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AACZ,QAAI,OAAON,SAAP,IAAoB,UAApB,IAAkC,CAACA,SAAS,EAAhD,EAAoD;AACpD,QAAIO,aAAa,GAAGD,GAAG,CAACE,MAAxB;;AAEA,OAAG;AACD,UAAIN,aAAa,CAACO,OAAd,CAAsBF,aAAtB,KAAwC,CAAC,CAA7C,EAAgD;AAChDA,MAAAA,aAAa,GAAGA,aAAa,CAACG,UAA9B;AACD,KAHD,QAGSH,aAHT;;AAKAR,IAAAA,cAAc,CAACO,GAAD,CAAd;AACD,GAVD;;AAYAK,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCP,OAAnC;AACA,SAAO;AAAA,WAAMM,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsCR,OAAtC,CAAN;AAAA,GAAP;AACD,CAvBD;;;;"}