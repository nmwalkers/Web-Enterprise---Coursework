{"version":3,"file":"outside-click.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["/**\n * Attach outside click listener\n * @param elements The inside elements\n * @param onOutsideClick Called on outside click\n */\nlet outsideClick = (\n  elements: HTMLElement | HTMLElement[],\n  onOutsideClick: (evt: MouseEvent) => any,\n  isEnabled?: () => boolean\n) => {\n  if (typeof window == 'undefined') return () => {};\n\n  let elementsArray = Array.isArray(elements) ? elements : [elements];\n\n  let handler = (evt: MouseEvent) => {\n    if (typeof isEnabled == 'function' && !isEnabled()) return;\n    let targetElement = evt.target as HTMLElement;\n\n    do {\n      if (elementsArray.indexOf(targetElement) != -1) return;\n      targetElement = targetElement.parentNode as HTMLElement;\n    } while (targetElement);\n\n    onOutsideClick(evt);\n  };\n\n  document.addEventListener('click', handler);\n  return () => document.removeEventListener('click', handler);\n};\n\nexport default outsideClick;\n"],"names":["elements","onOutsideClick","isEnabled","window","elementsArray","Array","isArray","handler","evt","targetElement","target","indexOf","parentNode","document","addEventListener","removeEventListener"],"mappings":"oFAKmB,SACjBA,EACAC,EACAC,MAEqB,oBAAVC,OAAuB,OAAO,iBAErCC,EAAgBC,MAAMC,QAAQN,GAAYA,EAAW,CAACA,GAEtDO,EAAU,SAACC,MACW,mBAAbN,GAA4BA,SACnCO,EAAgBD,EAAIE,SAErB,KAC4C,GAAzCN,EAAcO,QAAQF,GAAsB,OAChDA,EAAgBA,EAAcG,iBACvBH,GAETR,EAAeO,YAGjBK,SAASC,iBAAiB,QAASP,GAC5B,kBAAMM,SAASE,oBAAoB,QAASR"}